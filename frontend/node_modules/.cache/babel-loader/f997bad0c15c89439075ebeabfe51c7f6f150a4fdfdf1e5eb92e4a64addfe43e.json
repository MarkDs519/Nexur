{"ast":null,"code":"import React,{useReducer}from\"react\";import Board from\"./board.js\";import Styles from\"../../css/styles.js\";import KeyboardArrowLeft from'@mui/icons-material/KeyboardArrowLeft';import{useNavigate}from\"react-router-dom\";import Navbar from\"../Navbar.js\";// reducer function\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const reducer=(state,action)=>{switch(action.type){case'MOVE':return{...state,history:state.history.concat({squares:action.payload.squares}),// change the state\nxIsNext:!state.xIsNext};case'NEW GAME':return{xIsNext:true,history:[{squares:Array(9).fill(null)}]};default:return state;}};const winController=squares=>{let winningLines=[[0,1,2],[3,4,5],[6,7,8],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];let isDraw=true;for(let i=0;i<winningLines.length;i++){let[a,b,c]=winningLines[i];if(squares[a]&&squares[a]==squares[b]&&squares[b]==squares[c]){return squares[a];}if(!squares[a]||!squares[b]||!squares[c]){isDraw=false;}}if(isDraw){return'D';}return null;};function Game(){const navigate=useNavigate();const[state,dispatch]=useReducer(reducer,{xIsNext:true,history:[{squares:Array(9).fill(null)}]});const{xIsNext,history}=state;// handle squares click\nconst handleClick=i=>{// get the last item in the history\nlet current=history[history.length-1];let squares=current.squares.slice();let winner=winController(squares);// when the square is already occupied return nothing\nif(winner||squares[i]){return;}squares[i]=xIsNext?'X':'O';//console.log('Square: ', squares[i]);\n// get the last clicked square\ndispatch({type:'MOVE',payload:{squares}});};// start new game\nconst handleStartNewGame=()=>{dispatch({type:'NEW GAME',payload:{history}});};let current=history[history.length-1];// check for win \nconst winner=winController(current.squares);const playreStatus=winner?winner==='D'?'Draw':winner+' Wins!':'Next Player is '+(xIsNext?'X':'O');let StartButton=Styles().startBtn;let BackButton=Styles().backBtn;//console.log(current.squares);\nlet moveLog=history.map((step,move)=>{//console.log('Step: ', step);\nlet log=move?'Go to step '+move:'Waiting for player to make the move..';return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(StartButton,{children:log})},move);});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:winner?\"game disabled\":\"game\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"game-board\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-info\",children:/*#__PURE__*/_jsx(\"div\",{children:playreStatus})}),/*#__PURE__*/_jsx(Board,{onClick:i=>handleClick(i),squares:current.squares}),/*#__PURE__*/_jsx(\"div\",{className:\"start-btn\",children:/*#__PURE__*/_jsx(StartButton,{onClick:()=>handleStartNewGame(),children:\"Start New Game\"})})]})})]});}export default Game;","map":{"version":3,"names":["React","useReducer","Board","Styles","KeyboardArrowLeft","useNavigate","Navbar","jsx","_jsx","jsxs","_jsxs","reducer","state","action","type","history","concat","squares","payload","xIsNext","Array","fill","winController","winningLines","isDraw","i","length","a","b","c","Game","navigate","dispatch","handleClick","current","slice","winner","handleStartNewGame","playreStatus","StartButton","startBtn","BackButton","backBtn","moveLog","map","step","move","log","children","className","onClick"],"sources":["/Users/markdhrubasikder/Documents/Projects/GitHub/Nexur/frontend/src/components/tictactoe/game.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport Board from \"./board.js\";\nimport Styles from \"../../css/styles.js\";\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"../Navbar.js\";\n\n\n// reducer function\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'MOVE': return {\n            ...state,\n            history: state.history.concat(\n                {squares: action.payload.squares}\n            ),\n            // change the state\n            xIsNext: !state.xIsNext,\n        }\n        case 'NEW GAME': return {\n            xIsNext: true,\n            history: [{squares: Array(9).fill(null)}]\n        }\n        default:\n            return state;\n    }\n}\n\nconst winController = (squares) => {\n    let winningLines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ]\n    let isDraw = true;\n    for(let i=0; i < winningLines.length; i++) {\n        let [a, b, c] = winningLines[i];\n        if (squares[a] && squares[a] == squares[b] && squares[b] == squares[c]){\n            return squares[a]\n        }  \n        if (!squares[a] || !squares[b] || !squares[c]){\n            isDraw= false;\n        }\n    }\n    if (isDraw){\n        return 'D'\n    }\n    return null;\n}\n\nfunction Game (){\n    const navigate = useNavigate();\n    \n    const [state, dispatch] = useReducer(reducer, {\n        xIsNext: true,\n        history: [{squares: Array(9).fill(null)}]\n\n    })\n    const {xIsNext, history} = state;\n\n    // handle squares click\n    const handleClick = (i) => {\n        // get the last item in the history\n        let current = history[history.length-1];\n        let squares = current.squares.slice();\n        let winner = winController(squares);\n        // when the square is already occupied return nothing\n        if ( winner || squares[i]){\n            return;\n        }\n        squares[i] = xIsNext ? 'X' : 'O' ;\n        //console.log('Square: ', squares[i]);\n        // get the last clicked square\n        dispatch({\n            type: 'MOVE',\n            payload: {squares}\n        });\n    }\n\n    // start new game\n    const handleStartNewGame = () => {\n        dispatch({\n            type: 'NEW GAME',\n            payload: {history}\n        })\n    }\n\n    \n    let current = history[history.length-1]\n    // check for win \n    const winner = winController(current.squares);\n    const playreStatus = winner ? winner === 'D' ? 'Draw' :  winner + ' Wins!' : 'Next Player is ' + (xIsNext ? 'X' : 'O');\n    let StartButton = Styles().startBtn;\n    let BackButton = Styles().backBtn;\n    //console.log(current.squares);\n    let moveLog = history.map((step, move) => {\n        //console.log('Step: ', step);\n        let log = move ? 'Go to step ' + move : 'Waiting for player to make the move..' \n        return(\n                <li key={move}>\n                    <StartButton>{log}</StartButton>\n                </li>\n            )   \n        }\n    )\n    return(\n        <div>\n            <Navbar></Navbar>\n        <div className={winner?\"game disabled\":\"game\"}>\n            <div className=\"game-board\">\n                <div className=\"game-info\">\n                    <div>{playreStatus}</div>\n                </div>\n                <Board \n                    onClick={(i) => handleClick(i)} \n                    squares={current.squares}\n                >\n                </Board>\n                <div className=\"start-btn\">\n                    <StartButton onClick={() => handleStartNewGame()}>Start New Game</StartButton>\n                </div>\n            </div>\n            \n        </div>\n        </div>\n        \n    )\n}\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}