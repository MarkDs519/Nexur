{"ast":null,"code":"/**\n * \n * @returns User Input Validator\n */const validator=()=>{const validate={// CHECK OF VALID EMAIL\nisValidEmail:e=>{let mail=e.target.value;let validEmail=/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;if(!validEmail.test(mail)){//console.log(\"Password should be atleast 8 characters.\")\nreturn false;}else{//data[e.target.name] = mail;\n// set valid password as true\nreturn true;//console.log(newSignUpData[\"passwordValid\"]);\n}},// CHECK FOR VALID USERNAME\nisValidUsername:e=>{let user=e.target.value;if(user.length<5){return false;}else{return true;}},// CHECK FOR PASSWORD VALIDATION\nisValidPassword:e=>{let validPass=/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;let pass=e.target.value;if(!pass.match(validPass)){//console.log(\"Password should be atleast 8 characters.\")\nreturn false;}else{return true;}}};return validate;};module.exports=validator;","map":{"version":3,"names":["validator","validate","isValidEmail","e","mail","target","value","validEmail","test","isValidUsername","user","length","isValidPassword","validPass","pass","match","module","exports"],"sources":["/Users/markdhrubasikder/Documents/Projects/Nexur/frontend/src/validator.js"],"sourcesContent":["/**\n * \n * @returns User Input Validator\n */\n\nconst validator = () => {\n    const validate = {\n        // CHECK OF VALID EMAIL\n        isValidEmail: (e) => {\n            let mail = e.target.value;\n            let validEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n            if(!validEmail.test(mail)){\n                //console.log(\"Password should be atleast 8 characters.\")\n                return false;\n            }\n            else{\n                //data[e.target.name] = mail;\n                // set valid password as true\n                return true;\n                //console.log(newSignUpData[\"passwordValid\"]);\n            }\n        },\n        // CHECK FOR VALID USERNAME\n        isValidUsername: (e) => {\n            let user = e.target.value;\n            if(user.length < 5){\n                return false;\n            }\n            else{\n                return true;\n            }\n              \n        },\n\n        // CHECK FOR PASSWORD VALIDATION\n        isValidPassword: (e) => {\n            let validPass = /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n            let pass = e.target.value;\n            if(!pass.match(validPass)){\n                //console.log(\"Password should be atleast 8 characters.\")\n                return false;\n            }\n            else{\n                return true;\n            }\n                \n        }\n        \n    }\n    return validate;\n}\n\nmodule.exports = validator;"],"mappings":"AAAA;AACA;AACA;AACA,GAEA,KAAM,CAAAA,SAAS,CAAGA,CAAA,GAAM,CACpB,KAAM,CAAAC,QAAQ,CAAG,CACb;AACAC,YAAY,CAAGC,CAAC,EAAK,CACjB,GAAI,CAAAC,IAAI,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CACzB,GAAI,CAAAC,UAAU,CAAG,2CAA2C,CAC5D,GAAG,CAACA,UAAU,CAACC,IAAI,CAACJ,IAAI,CAAC,CAAC,CACtB;AACA,MAAO,MAAK,CAChB,CAAC,IACG,CACA;AACA;AACA,MAAO,KAAI,CACX;AACJ,CACJ,CAAC,CACD;AACAK,eAAe,CAAGN,CAAC,EAAK,CACpB,GAAI,CAAAO,IAAI,CAAGP,CAAC,CAACE,MAAM,CAACC,KAAK,CACzB,GAAGI,IAAI,CAACC,MAAM,CAAG,CAAC,CAAC,CACf,MAAO,MAAK,CAChB,CAAC,IACG,CACA,MAAO,KAAI,CACf,CAEJ,CAAC,CAED;AACAC,eAAe,CAAGT,CAAC,EAAK,CACpB,GAAI,CAAAU,SAAS,CAAG,4CAA4C,CAC5D,GAAI,CAAAC,IAAI,CAAGX,CAAC,CAACE,MAAM,CAACC,KAAK,CACzB,GAAG,CAACQ,IAAI,CAACC,KAAK,CAACF,SAAS,CAAC,CAAC,CACtB;AACA,MAAO,MAAK,CAChB,CAAC,IACG,CACA,MAAO,KAAI,CACf,CAEJ,CAEJ,CAAC,CACD,MAAO,CAAAZ,QAAQ,CACnB,CAAC,CAEDe,MAAM,CAACC,OAAO,CAAGjB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}